
use clap::{Arg, App, SubCommand};

pub fn sub_cmd<'a>() -> App<'a, 'a> {
    SubCommand::with_name("run")
        .about("Run migrations")
        .arg(Arg::with_name("target")
            .help("Database schema version that \"run\" command should attempt to reach")
            .short("t")
            .takes_value(true)
            .required(true)
        )
        .arg(Arg::with_name("migrations-dir")
            .help("The directory to look for migrations in.")
            .short("m")
            .takes_value(true)
            .default_value("migrations")
        )
        .arg(Arg::with_name("environment")
            .help("Environment which application is running in")
            .short("e")
            .takes_value(true)
            .requires("config")
        )
        .arg(Arg::with_name("config")
            .help("Path to database access configuration file")
            .short("c")
            .takes_value(true)
            .required_unless_all(&["host", "user", "password", "database"])
        )
        .arg(Arg::with_name("host")
            .help("Database server host")
            .short("h")
            .takes_value(true)
            .required_unless("config")
        )
        .arg(Arg::with_name("user")
            .help("Database server user")
            .short("u")
            .takes_value(true)
            .required_unless("config")
        )
        .arg(Arg::with_name("password")
            .help("Database server password")
            .short("p")
            .takes_value(true)
            .required_unless("config")
        )
        .arg(Arg::with_name("database")
            .help("Database to run migrations on")
            .short("d")
            .takes_value(true)
            .required_unless("config")
        )
}
